import org.gradle.api.tasks.testing.Test

apply plugin: 'java'

repositories {
    mavenCentral()
}

configurations {
    agent
}

dependencies {
    // https://mvnrepository.com/artifact/org.testng/testng
    testCompile group: 'org.testng', name: 'testng', version: '7.1.0'

    // https://mvnrepository.com/artifact/org.hamcrest/hamcrest-all
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

    // https://mvnrepository.com/artifact/org.hamcrest/java-hamcrest
    testCompile group: 'org.hamcrest', name: 'java-hamcrest', version: '2.0.0.0'

    // https://mvnrepository.com/artifact/com.beust/jcommander
    compile group: 'com.beust', name: 'jcommander', version: '1.78'

// https://mvnrepository.com/artifact/com.thoughtworks.xstream/xstream
    compile group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.12'


// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.49'

    // https://mvnrepository.com/artifact/org.hibernate/hibernate-core
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.15.Final'

    agent 'org.aspectj:aspectjweaver:1.9.5'
    compile 'ru.yandex.qatools.allure:allure-testng-adaptor:1.5.4'

    compile 'org.robotframework:robotframework:3.0'
    compile 'info.cukes:cucumber-java:1.2.4'
    compile 'info.cukes:cucumber-testng:1.2.4'


}






    task testGroups(type: Test) {
        useTestNG {
            suites 'src/test/resources/testng-groups.xml'
        }
        if (project.hasProperty('browser')) {
            systemProperty 'browser', "${browser}"
        }
        if (project.hasProperty('target')) {
            systemProperty 'target', "${target}"
        }
        if (project.hasProperty('verifyUI')) {
            systemProperty 'target', "${verifyUI}"
        }
    }

testGroups.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

    task testContacts(type: Test) {
        useTestNG {
            suites 'src/test/resources/testng-contacts.xml'
        }
        if (project.hasProperty('browser')) {
            systemProperty 'browser', "${browser}"
        }
        if (project.hasProperty('target')) {
            systemProperty 'target', "${target}"
        }
        if (project.hasProperty('verifyUI')) {
            systemProperty 'target', "${verifyUI}"
        }


    }

testContacts.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}


task rf(type: JavaExec) {
    main = 'org.robotframework.RobotFramework'
    classpath = sourceSets.test.runtimeClasspath
    args '--outputdir', 'build/rf-report'
    args 'src/test/resources/rf'
}
